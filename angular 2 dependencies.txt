// ***********************
// Behorende bij de training "Angular 2 - Leren en begrijpen"
// (C) 2016 - Peter Kassenaar <info@kassenaar.com>

// Gebruik deze snippets om snel een boilerplate-project samen
// te stellen voor Angular 2
// ***********************

// 1. tsconfig.json - in de root van je project

{
  "compilerOptions": {
    "target"                : "es5",
    "module"                : "system",
    "moduleResolution"      : "node",
    "sourceMap"             : true,
    "emitDecoratorMetadata" : true,
    "experimentalDecorators": true,
    "removeComments"        : false,
    "noImplicitAny"         : false
  },
  "exclude"        : [
    "node_modules",
    "typings/main",
    "typings/main.d.ts"
  ]
}

// 2. typings.json - in de root van je project

{
  "ambientDependencies": {
    "es6-shim": "github:DefinitelyTyped/DefinitelyTyped/es6-shim/es6-shim.d.ts#7de6c3dd94feaeb21f20054b9f30d5dabc5efabd",
    "jasmine" : "github:DefinitelyTyped/DefinitelyTyped/jasmine/jasmine.d.ts#7de6c3dd94feaeb21f20054b9f30d5dabc5efabd"
  }
}


// 3. package.json - in de root van je project.
// Gebruik daarna npm install om de dependencies te installeren.

{
  "name"           : "angular2-helloWorld",
  "version"        : "1.0.0",
  "scripts"        : {
    "start"      : "concurrently \"npm run tsc:w\" \"npm run lite\" ",
    "tsc"        : "tsc",
    "tsc:w"      : "tsc -w",
    "lite"       : "lite-server",
    "typings"    : "typings",
    "postinstall": "typings install"
  },
  "license"        : "ISC",
  "dependencies"   : {
    "angular2"        : "2.0.0-beta.12",
    "bootstrap"       : "^3.3.6",
    "systemjs"        : "0.19.24",
    "es6-shim"        : "^0.35.0",
    "reflect-metadata": "0.1.2",
    "rxjs"            : "5.0.0-beta.2",
    "zone.js"         : "0.6.6"
  },
  "devDependencies": {
    "concurrently": "^2.0.0",
    "lite-server" : "^2.1.0",
    "typescript"  : "^1.8.9",
    "typings"     : "^0.7.9"
  },
  "author"         : "<<je naam>>"
}

// 4. Maak een map /app in de root van je project.

// 4a. Component maken - app/app.component.ts

import {Component} from 'angular2/core';

@Component({
	selector: 'hello-world',
	template: '<h1>Hello World - dit is Angular 2!</h1>'
})
export class AppComponent {
	// ... hier komt de logica
}


// 5. Bootstrapper maken - app/main.ts

import {bootstrap}    from 'angular2/platform/browser'
import {AppComponent} from './app.component'

bootstrap(AppComponent);

// 6. Index.html - in root van je project. In de header:

<html>
<head>
    <meta charset="UTF-8">
    <title>Angular 2 - Hello World</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- 1. Styling toevoegen -->
    <link rel="stylesheet" href="node_modules/bootstrap/dist/css/bootstrap.min.css">

    <!-- 2. Load libraries -->
    <!-- IE required polyfills, in this exact order -->
    <script src="node_modules/es6-shim/es6-shim.min.js"></script>
    <script src="node_modules/systemjs/dist/system-polyfills.js"></script>
    <script src="node_modules/angular2/es6/dev/src/testing/shims_for_IE.js"></script>

    <script src="node_modules/angular2/bundles/angular2-polyfills.js"></script>
    <script src="node_modules/systemjs/dist/system.src.js"></script>
    <script src="node_modules/rxjs/bundles/Rx.js"></script>
    <script src="node_modules/angular2/bundles/angular2.dev.js"></script>

    <!-- 3. Configure SystemJS -->
    <script>
        System.config({
            packages: {
                app: {
                    format: 'register',
                    defaultExtension: 'js'
                }
            }
        });
        System.import('app/main')
                .then(null, console.error.bind(console));
    </script>
</head>

// 7. Inhoud van index.html - in de <body>

<!-- 4. De applicatie tonen -->
<body>
<div class="container">
	<hello-world>
		Bezig met laden...
	</hello-world>
</div>
</body>

</html>

// 7. App draaien - in command line window

npm start